# Generated by Django 2.1.4 on 2019-01-29 12:18

import dctcmsbase.blocks
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtailsnippetscopy.models


class Migration(migrations.Migration):

    dependencies = [
        ('images', '0002_pheimage_file_hash'),
        ('dctcmsbase', '0005_auto_20181217_1427'),
    ]

    operations = [
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('heading', models.CharField(blank=True, max_length=255, null=True)),
                ('show_sitemap', models.BooleanField(default=True)),
                ('number_per_column', models.IntegerField(blank=True, default=4, help_text='Number of menu items per column', null=True)),
                ('menu_items', wagtail.core.fields.StreamField([('simple_menu_item', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(required=False)), ('link_external', wagtail.core.blocks.CharBlock(label='External link', required=False)), ('link_page', dctcmsbase.blocks.ItemPageBlock(required=False)), ('link_id', dctcmsbase.blocks.IDBlock(classname='dct-meta-field', help_text='Uniquely identify the CTA. Often used for tracking', label='ID', required=False))]))])),
                ('follow_us', wagtail.core.fields.StreamField([('social_media_link', wagtail.core.blocks.StructBlock([('label', wagtail.core.blocks.CharBlock(required=False)), ('type', wagtail.core.blocks.ChoiceBlock(choices=[('twitter', 'Twitter'), ('facebook', 'Facebook')])), ('link', wagtail.core.blocks.URLBlock(label='External link', required=False))]))], blank=True, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.PHEImage')),
            ],
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.PHEImage')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('menu_items', wagtail.core.fields.StreamField([('simple_menu_item', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(required=False)), ('link_external', wagtail.core.blocks.CharBlock(label='External link', required=False)), ('link_page', dctcmsbase.blocks.ItemPageBlock(required=False)), ('link_id', dctcmsbase.blocks.IDBlock(classname='dct-meta-field', help_text='Uniquely identify the CTA. Often used for tracking', label='ID', required=False))])), ('multi_menu_item', wagtail.core.blocks.StructBlock([('label', wagtail.core.blocks.CharBlock(required=False)), ('menu_items', wagtail.core.blocks.StreamBlock([('simple_menu_item', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(required=False)), ('link_external', wagtail.core.blocks.CharBlock(label='External link', required=False)), ('link_page', dctcmsbase.blocks.ItemPageBlock(required=False)), ('link_id', dctcmsbase.blocks.IDBlock(classname='dct-meta-field', help_text='Uniquely identify the CTA. Often used for tracking', label='ID', required=False))]))], icon='arrow-left', label='Items'))]))])),
            ],
            bases=(wagtailsnippetscopy.models.SnippetCopyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('class_name', models.CharField(max_length=255)),
            ],
        ),
    ]
