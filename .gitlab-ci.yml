---
stages:
  - test
  - build
  - deploy_review
  - deploy_integration
  - deploy_staging
  - deploy_production

image: docker:git

services:
- docker:dind

# Enable sharing of secrets etc.
cache:
  key: "${CI_JOB_NAME}-${CI_COMMIT_SHA}"

before_script:
  - apk add --update bash curl curl-dev git jq
  - bash ./scripts/get-ci-scripts.sh

test:
  stage: test
  script:
    - apk --no-cache add py-pip
    - pip install docker-compose
    - docker-compose -f ./docker-compose-test.yml up --build --force-recreate --exit-code-from oneyou-cms-test

build_latest:
  stage: build
  environment:
    name: dev
  script:
    - bash ./scripts/build-docker-images-phedct.sh "latest"
  only:
    - master

build_tag:
  stage: build
  environment:
    name: staging
  script:
    - bash ./scripts/build-docker-images-phedct.sh "$CI_COMMIT_TAG"
  only:
    - tags

build_branches:
  stage: build
  environment:
    name: review
  script:
    - bash ./scripts/build-docker-images-phedct.sh "$CI_COMMIT_REF_SLUG"
  only:
    - /^review.*$/

deploy_review:
  stage: deploy_review
  variables:
    RANCHER_ENVIRONMENT: phe-dev
    REVIEW_APP: "TRUE"
  script:
    - bash ./scripts/ci-deployment/deploy.sh
  environment:
    name: review/${CI_COMMIT_REF_NAME}
    url: https://${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}.dev.${ENV_DOMAIN}
    on_stop: remove_review
  only:
    - /^review.*$/

remove_review:
  stage: deploy_review
  variables:
    RANCHER_ENVIRONMENT: phe-dev
    REVIEW_APP: "TRUE"
  script:
    - bash ./scripts/ci-deployment/gitlab/remove-review-app.sh
  when: manual
  environment:
    name: review/${CI_COMMIT_REF_NAME}
    action: stop
  only:
    - /^review.*$/

deploy_integration:
  stage: deploy_integration
  variables:
    RANCHER_ENVIRONMENT: phe-dev
  script:
    - bash ./scripts/ci-deployment/deploy.sh
  environment:
    name: dev
    url: http://${CI_PROJECT_NAME}.dev.${ENV_DOMAIN}
  only:
    - master

deploy_staging:
  stage: deploy_staging
  variables:
    RANCHER_ENVIRONMENT: phe-staging
  script:
    - bash ./scripts/ci-deployment/deploy.sh
  environment:
    name: staging
    url: http://${CI_PROJECT_NAME}.staging.${ENV_DOMAIN}
  when: manual
  only:
    - tags

deploy_production:
  stage: deploy_production
  variables:
    RANCHER_ENVIRONMENT: phe-production
  script:
    - bash ./scripts/ci-deployment/deploy.sh
  environment:
    name: production
    url: http://${CI_PROJECT_NAME}.production.${ENV_DOMAIN}
  when: manual
  only:
    - tags
